#!/bin/bash

# Any failure causes exit
set -e

. test/setup_railsapp

# Check required vars are set ...
: ${base_dir:?} ${test_dir:?} ${success:?} ${rake:?}

testurl="$base_dir/test/testurl"
fake_smtp_server="$base_dir/test/fake_smtp_server"

server_pid=''

finish()
{
    set +e
    echo ========================================================
    echo TEST ${1:-FAILED}
    echo ========================================================
    echo Result of: ls -lR $test_dir/railsapp/log $test_dir/railsapp/db
    ls -lR $test_dir/railsapp/log $test_dir/railsapp/db

    if [ -s $test_dir/railsapp/log/test.log ]
    then
        echo ========================================================
        echo Last 300 lines of test log
        tail -300 $test_dir/railsapp/log/test.log
    fi

    case "$server_pid" in
        [0-9]*)
            echo ========================================================
            echo "Killing rails server [pid: $server_pid]"
            kill -9 $server_pid 
            wait
            ;;
    esac
    trap "" 0
    echo ========================================================
    echo TEST ${1:-FAILED}
    echo ========================================================
    exit ${2:-2}
}

trap "finish FAILED 1" 0

cd $railsapp

echo Setting RAILS_ENV=test RACK_ENV=test
export RAILS_ENV=test RACK_ENV=test

port=3456

if [ -x script/server ]
then
    if [ -f Gemfile ]
    then
	echo Starting server on port $port using bundle exec ./script/server ...
	bundle exec ./script/server webrick -p $port &
    else
	echo Starting server on port $port using ./script/server ...
	./script/server webrick -p $port &
    fi
else
    echo Starting server on port $port using $rails s ...
    $rails s webrick -p $port &
fi
server_pid=$!
sleep 20

echo STATIC-FILE > public/static.txt

host=http://localhost:${port}

# get a static file
echo
echo 'TESTING can get a static file ...'
$testurl ${host}/static.txt STATIC-FILE
echo

echo 'TESTING health_check/migration should pass with no database migrations ...'
mkdir -p db/migrate
ls db/migrate
$testurl ${host}/health_check/migration $success
echo

echo 'TESTING health_check/migration should fail without initial database migration ...'
cp $base_dir/test/migrate/nine/* db/migrate
ls db/migrate
$testurl ${host}/health_check/migration failed
echo

echo 'TESTING health_check/database should pass without initial database migration (since it ignores the difference) ...'
$testurl ${host}/health_check/database $success
echo

echo 'TESTING health_check/site should pass ...'
$testurl ${host}/health_check/site $success
echo

echo 'TESTING health_check/migration should pass after initial database migration ...'
$rake db:migrate 
$testurl ${host}/health_check/migration $success
echo

echo 'TESTING health_check/migration should fail without all migrations ...'
cp $base_dir/test/migrate/twelve/* db/migrate
ls db/migrate
$testurl ${host}/health_check/migration failed
echo

echo 'TESTING health_check/migration should pass after both database migrations ...'
$rake db:migrate 
$testurl ${host}/health_check/migration $success
echo

echo 'TESTING health_check/migration should pass after both database migrations ...'
$rake db:migrate 
$testurl ${host}/health_check/migration $success
echo

echo 'TESTING health_check/email should fail without smtp available ...'
$testurl ${host}/health_check/email failed
echo

echo 'TESTING health_check/email should pass with smtp available ...'
$fake_smtp_server &
sleep 5
$testurl ${host}/health_check/email $success
echo

echo 'TESTING health_check (all) should fail without smtp available ...'
$testurl ${host}/health_check failed
echo

echo 'TESTING health_check/all should fail without smtp available ...'
$testurl ${host}/health_check failed
echo

echo 'TESTING health_check (all) should pass with smtp available ...'
$fake_smtp_server &
sleep 5
$testurl ${host}/health_check $success
echo

echo 'TESTING health_check/all should pass with smtp available ...'
$fake_smtp_server &
sleep 5
$testurl ${host}/health_check/all $success
echo

finish PASSED 0
exit 0

# vi: sw=4 ai sm:
